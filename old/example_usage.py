import pandas as pd
import os
from datetime import datetime
from jewelry_cost_calculator import (
    Material, Consumable, WorkTime, JewelryCostInput, calculate_jewelry_cost
)

def generate_instagram_description(jewelry_type, materials, stones, style, features, photo_path, size, start_price):
    mat_str = ', '.join([m.name for m in materials if '–º–µ–¥—å' in m.name.lower() or '–ª–∞—Ç—É–Ω—å' in m.name.lower() or '–Ω–µ–π–∑–∏–ª—å–±–µ—Ä' in m.name.lower()])
    stone_str = ', '.join([m.name for m in stones])
    # RU
    ru_desc = f"üåø {jewelry_type.capitalize()}"
    ru_desc += f"\n\n"
    ru_desc += f"{jewelry_type.capitalize()} ‚Äî —Å–º–µ–ª—ã–π –∞–∫—Ü–µ–Ω—Ç –∏ –º–∞–≥–∏—è –ª–∏–Ω–∏–π, –≤–¥–æ—Ö–Ω–æ–≤–ª—ë–Ω–Ω–∞—è —Å–∏–ª–æ–π –ø—Ä–∏—Ä–æ–¥—ã –∏ –º–∏—Å—Ç–∏–∫–æ–π. "
    if mat_str:
        ru_desc += f"–ú–∞—Ç–µ—Ä–∏–∞–ª—ã: {mat_str}. "
    if stone_str:
        ru_desc += f"–ö–∞–º–Ω–∏: {stone_str}. "
    if style:
        ru_desc += f"–°—Ç–∏–ª—å: {style}. "
    if features:
        ru_desc += f"–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏: {features}. "
    ru_desc += "\n–ö–∞–∂–¥–∞—è –¥–µ—Ç–∞–ª—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –≤—Ä—É—á–Ω—É—é, —Å –≤–Ω–∏–º–∞–Ω–∏–µ–º –∫ —Ç–µ–∫—Å—Ç—É—Ä–µ –∏ —Å–≤–µ—Ç—É.\n"
    ru_desc += f"\nüìê –†–∞–∑–º–µ—Ä: {size}"
    ru_desc += f"\nüí∞ –¶–µ–Ω–∞: {start_price:,}‚Ç∏".replace(",", " ")
    ru_desc += "\n\n–í –Ω–∞–ª–∏—á–∏–∏ ‚Äî –ø–∏—à–∏—Ç–µ –≤ –¥–∏—Ä–µ–∫—Ç, –µ—Å–ª–∏ —Ç—Ä–æ–Ω—É–ª–æ –≤–∞—à–µ —Å–µ—Ä–¥–µ—á–∫–æ üíå\n"
    # EN
    en_desc = f"üå≤ {jewelry_type.capitalize()} (Ear cuff / Ring / Brooch / etc.)\n\n"
    en_desc += f"Inspired by the power of nature and a touch of mystery. "
    if mat_str:
        en_desc += f"Materials: {mat_str}. "
    if stone_str:
        en_desc += f"Stones: {stone_str}. "
    if style:
        en_desc += f"Style: {style}. "
    if features:
        en_desc += f"Features: {features}. "
    en_desc += "\nEach detail is handcrafted with care for texture and light.\n"
    en_desc += f"\nüìê Size: {size}"
    en_desc += f"\nüí∞ Price: {start_price:,}‚Ç∏".replace(",", " ")
    en_desc += "\n\nThis one-of-a-kind piece is available ‚Äî message me if it speaks to you üíå\n"
    hashtags = "#—É–∫—Ä–∞—à–µ–Ω–∏—è—Ä—É—á–Ω–æ–π—Ä–∞–±–æ—Ç—ã #–∞–≤—Ç–æ—Ä—Å–∫–∏–µ—É–∫—Ä–∞—à–µ–Ω–∏—è #—Ä—É—á–Ω–∞—è—Ä–∞–±–æ—Ç–∞ #–º–µ–¥—å #–∫–∞—Ñ—Ñ #–∫–æ–ª—å—Ü–æ #–±—Ä–æ—à—å #–∂–µ–º—á—É–≥ #—Å—Ç–∏–ª—å #–º–∞–≥–∏—è #handmadejewelry #earcuff #copperjewelry #baroquepearl #uniquejewelry #slowmade #natureinspired #giftideas #madeinkazakhstan #authorjewelry #jewelry #artisanjewelry #oneofakind #naturejewelry #craftwithlove #exclusivejewelry"
    desc = f"{ru_desc}\n---\n\n{en_desc}\nüß∑ –•—ç—à—Ç–µ–≥–∏ / Hashtags:\n{hashtags}"
    if photo_path:
        desc += f"\n–§–æ—Ç–æ: {photo_path}"
    return desc

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–∫—Ä–∞—â—ë–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
short_df = pd.read_csv('short_materials.csv')
short_df = short_df.dropna(subset=['–¶–µ–Ω–∞'])  # –¢–æ–ª—å–∫–æ —Å —Ü–µ–Ω–æ–π
short_df = short_df.drop_duplicates(subset=['–ù–∞–∑–≤–∞–Ω–∏–µ', '–ï–¥.–∏–∑–º.'])

print("\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:")
for idx, row in short_df.iterrows():
    print(f"{idx+1}. {row['–ù–∞–∑–≤–∞–Ω–∏–µ']} ‚Äî {row['–¶–µ–Ω–∞']} —Ç–≥/{row['–ï–¥.–∏–∑–º.']}")

selected = []
stones = []
while True:
    choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –º–∞—Ç–µ—Ä–∏–∞–ª–∞ (–∏–ª–∏ Enter –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è): ").strip()
    if not choice:
        break
    if not choice.isdigit() or not (1 <= int(choice) <= len(short_df)):
        print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        continue
    idx = int(choice) - 1
    row = short_df.iloc[idx]
    qty = input(f"  –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è '{row['–ù–∞–∑–≤–∞–Ω–∏–µ']}' (–≤ {row['–ï–¥.–∏–∑–º.']}): ").replace(",", ".").strip()
    try:
        qty = float(qty)
        if qty <= 0:
            print("  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º!")
            continue
    except ValueError:
        print("  –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ!")
        continue
    mat = Material(
        name=row['–ù–∞–∑–≤–∞–Ω–∏–µ'],
        unit_price=float(row['–¶–µ–Ω–∞']),
        quantity=qty,
        unit=row['–ï–¥.–∏–∑–º.']
    )
    selected.append(mat)
    # –ï—Å–ª–∏ —ç—Ç–æ –∫–∞–º–µ–Ω—å (–Ω–µ –º–µ—Ç–∞–ª–ª), –¥–æ–±–∞–≤–ª—è–µ–º –≤ stones
    if not any(x in mat.name.lower() for x in ['–º–µ–¥—å', '–ª–∞—Ç—É–Ω—å', '–Ω–µ–π–∑–∏–ª—å–±–µ—Ä']):
        stones.append(mat)
    print(f"  –î–æ–±–∞–≤–ª–µ–Ω–æ: {row['–ù–∞–∑–≤–∞–Ω–∏–µ']} ‚Äî {qty} {row['–ï–¥.–∏–∑–º.']}")

if not selected:
    print("\n–ù–µ –≤—ã–±—Ä–∞–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞! –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ.")
    exit(0)

# –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å—Ç–∞–≤–∫—É –∏ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã
while True:
    try:
        hourly_rate = float(input("\n–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞–≤–∫—É –∑–∞ —á–∞—Å —Ä–∞–±–æ—Ç—ã (—Ç–≥): ").replace(",", "."))
        if hourly_rate <= 0:
            print("–°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π!")
            continue
        break
    except ValueError:
        print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞!")

while True:
    try:
        hours = float(input("–í–≤–µ–¥–∏—Ç–µ –∑–∞—Ç—Ä–∞—á–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è (—á–∞—Å—ã): ").replace(",", "."))
        if hours <= 0:
            print("–í—Ä–µ–º—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º!")
            continue
        break
    except ValueError:
        print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è!")

# –í–≤–æ–¥–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è
jewelry_type = input("\n–¢–∏–ø –∏–∑–¥–µ–ª–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –±—Ä–∞—Å–ª–µ—Ç, –∫–æ–ª—å—Ü–æ, —Å–µ—Ä—å–≥–∏): ").strip()
size = input("–†–∞–∑–º–µ—Ä –∏–∑–¥–µ–ª–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, 3,5 —Å–º –∏–ª–∏ 18 –º–º): ").strip()
style = input("–°—Ç–∏–ª—å/–Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –º–∏–Ω–∏–º–∞–ª–∏–∑–º, –±–æ—Ö–æ, –≤–∏–Ω—Ç–∞–∂): ").strip()
features = input("–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏/–¥–ª—è –∫–æ–≥–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–¥–∞—Ä–æ–∫, –∂–µ–Ω—Å–∫–∏–π, –º—É–∂—Å–∫–æ–π): ").strip()
photo_path = input("–ü—É—Ç—å –∫ —Ñ–æ—Ç–æ (–∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º): ").strip()

consumables = [
    Consumable(name="–†–∞—Å—Ö–æ–¥–Ω–∏–∫–∏ (—à–ª–∏—Ñ–æ–≤–∫–∞, –≤–æ—Å–∫, —É–ø–∞–∫–æ–≤–∫–∞)", approx_cost=350),
    Consumable(name="–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ", approx_cost=20),
    Consumable(name="–ê–º–æ—Ä—Ç–∏–∑–∞—Ü–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞", approx_cost=125),
    Consumable(name="–¶–∞–ø–æ–ª–∞–∫ (–ª–∞–∫ –¥–ª—è –º–µ—Ç–∞–ª–ª–∞)", approx_cost=50),
]

work_time = WorkTime(hours=hours, hourly_rate=hourly_rate)

data = JewelryCostInput(
    materials=selected,
    consumables=consumables,
    work_time=work_time,
    electricity_cost=0,  # —É–∂–µ —É—á—Ç–µ–Ω–æ –≤ consumables
    tool_depreciation=0, # —É–∂–µ —É—á—Ç–µ–Ω–æ –≤ consumables
    packaging_cost=0,    # —É–∂–µ —É—á—Ç–µ–Ω–æ –≤ consumables
    defect_percent=0,    # –Ω–µ —É—á–∏—Ç—ã–≤–∞–µ–º –±—Ä–∞–∫ –¥–ª—è —á–∏—Å—Ç–æ—Ç—ã –ø—Ä–∏–º–µ—Ä–∞
)

result = calculate_jewelry_cost(data)

# –ö—Ä–∞—Å–∏–≤—ã–π –≤—ã–≤–æ–¥
print("\n–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å –∏–∑–¥–µ–ª–∏—è (–ø–µ—Ä–µ—Å—á–∏—Ç–∞–Ω–Ω–∞—è)")
for name, cost in result.cost_breakdown.items():
    print(f"- {name}: {int(cost)} —Ç–≥")
print(f"\n–ò—Ç–æ–≥–æ —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å: {int(result.total_cost)} —Ç–≥\n")
print("–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è —Ü–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏:")
for label, price in result.recommended_prices.items():
    print(f"- {label}: {int(price)} —Ç–≥")
print(f"\n{result.price_comment}")

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è Instagram
print("\n---\n–û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è Instagram:\n")
# –ü–æ–ª—É—á–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é —Ü–µ–Ω—É (√ó1.5)
start_price = None
for label, price in result.recommended_prices.items():
    if '1.5' in label or '–Ω–∞—á–∞–ª' in label.lower():
        start_price = int(price)
        break
if start_price is None:
    start_price = int(result.total_cost * 1.5)

desc = generate_instagram_description(
    jewelry_type, selected, stones, style, features, photo_path, size, start_price
)
print(desc)

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å—ë –≤ .md-—Ñ–∞–π–ª
os.makedirs('jewelry', exist_ok=True)
today = datetime.now().strftime('%Y-%m-%d_%H-%M')
filename = f"jewelry/{jewelry_type.replace(' ', '_')}_{today}.md"
with open(filename, 'w', encoding='utf-8') as f:
    f.write(f"# {jewelry_type}\n\n")
    f.write(f"**–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:** {today}\n\n")
    f.write("## –°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ –∑–∞—Ç—Ä–∞—Ç—ã\n\n")
    for name, cost in result.cost_breakdown.items():
        f.write(f"- {name}: {int(cost)} —Ç–≥\n")
    f.write(f"\n**–ò—Ç–æ–≥–æ —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å:** {int(result.total_cost)} —Ç–≥\n\n")
    f.write("## –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è —Ü–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏\n\n")
    for label, price in result.recommended_prices.items():
        f.write(f"- {label}: {int(price)} —Ç–≥\n")
    f.write(f"\n{result.price_comment}\n\n")
    f.write("---\n\n")
    f.write("## –û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è Instagram\n\n")
    f.write(desc + '\n')
    if photo_path:
        f.write(f"\n![]({photo_path})\n")
print(f"\n–í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ {filename}") 